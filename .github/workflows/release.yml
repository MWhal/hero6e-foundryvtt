name: Create Release

on:
  push:
    branches:
      - main

jobs:
  check_version:
    runs-on: ubuntu-latest
    outputs:
      version: ${{ steps.extract_version.outputs.VERSION }}
    
    steps:
    - uses: actions/checkout@v2

    - name: Extract version number from commit message
      id: extract_version
      run: |
        COMMIT_MSG=$(git log --format=%B -n 1 ${{ github.sha }})
        if [[ $COMMIT_MSG == version* ]]; then
          VERSION=${COMMIT_MSG#version v}
          echo "::set-output name=VERSION::$VERSION"
        fi  

  build:
    needs: check_version
    if: needs.check_version.outputs.version != ''
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2

    - name: Set up Node.js
      uses: actions/setup-node@v2
      with:
        node-version: '14'

    - name: Install dependencies
      run: npm ci

    - name: Test
      run: npm run test

    - name: Build
      run: npm run build

    - name: Update version in a file
      run: |
        sed -i "s/<old_version>/${{ env.VERSION }}/g" <your_filename_here>
      
    - name: Archive code
      run: |
        zip -r hero6efoundryvtt2.zip .

    - name: Upload Artifacts
      uses: actions/upload-artifact@v2
      with:
        name: hero6efoundryvtt2.zip
        path: hero6efoundryvtt2.zip

  release:
    needs: build
    if: needs.check_version.outputs.version != ''
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2

    - name: Download Artifacts
      uses: actions/download-artifact@v2
      with:
        name: hero6efoundryvtt2.zip

    - name: Create and push tag
      run: |
        git config --local user.email "action@github.com"
        git config --local user.name "GitHub Action"
        git tag ${{ env.VERSION }}
        git push origin ${{ env.VERSION }}

    - name: Create Release
      id: create_release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: ${{ env.VERSION }}
        release_name: Release ${{ env.VERSION }}
        draft: false
        prerelease: false

    - name: Upload system zip
      id: upload-release-asset 
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: ./hero6efoundryvtt2.zip
        asset_name: hero6efoundryvtt2.zip
        asset_content_type: application/zip

    - name: Upload system.json
      id: upload-system-json
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: ./system.json
        asset_name: system.json
        asset_content_type: application/json